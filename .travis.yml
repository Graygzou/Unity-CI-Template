# Example Travis config. See the entire example: https://github.com/JonathanPorta/ci-build

os: osx
osx_image: xcode7.3
language: csharp
# If let by the gitignore.
#solution: ./****.sln

#matrix:
  #include:
    #- dotnet: 2.1.301
    #  mono: none
    #  env: DOTNETCORE=1  # optional, can be used to take different code paths in your script
    #- mono: latest  # Already by default.

# Specified the branch.
branches:
  only:
    - master

# Environment variables
#env:
#  global:
#    - CODECOV_IO_TOKEN=2ff3d741-5b36-4314-9537-8581706ed054

addons:
  apt:
    packages:
      - xsltproc
      - xmlstarlet
  sonarcloud:
    organization: "graygzou-github"
    token:
      secure: ${SONAR_TOKEN}

# Set up prerequisites for installing dependencies that you need for you build.
# For example:
#   npm install
#   bundle install
before_install:
  # Nuget installs
  ### The NUnit unit testing tool.
  - nuget install NUnit.Runners -Version 2.6.4 -OutputDirectory packages -Verbosity quiet
  - nuget install NUnit.Runners -Version 3.8.0 -OutputDirectory testrunner -Verbosity quiet
  ### (Windows OSs only - no MONO) OpenCover captures the NUnit testing results and produces the coverage report in .XML format
  - nuget install OpenCover -Version 4.6.519 -OutputDirectory packages -Verbosity quiet
  ### Produces the HTML report based upon OpenCoverâ€™s Results (.XML)
  - nuget install ReportGenerator -Version 2.4.5.0 -OutputDirectory packages -Verbosity quiet
  - nuget install coveralls.io -Version 1.4.2 -OutputDirectory coveralls -Verbosity quiet
  - nuget install JetBrains.dotCover.CommandLineTools -Version 2018.1.1 -OutputDirectory packages -Verbosity quiet
  # Apt installs
  - brew update > /dev/null
  - if [ $TRAVIS_OS_NAME = linux ]; then
      sudo apt-get update;
      sudo apt-get install xmlstarlet;
    else
      brew update;
      brew install xmlstarlet;
    fi
  # Make executable files
  - chmod a+x ./Scripts/*.sh
  - chmod a+x ./packages/OpenCover.4.6.519/tools/OpenCover.Console.exe
  - chmod a+x ./packages/JetBrains.dotCover.CommandLineTools.2018.1.1/tools/dotCover.exe

# Set up the dependencies of your build.
install:
  - ./Scripts/install.sh
  - ./Scripts/build.sh

# Set up your environment before you run your script.
# For example:
#   copy files, start your database, or declare environment variables
before_script:

# Runs your test script
script:
  # --- DEBUG ---
  - ./Scripts/debug.sh
  # Run customs tests.
  - ./Scripts/run-tests.sh
  # Try something new.... Does not work.
  #- mono --debug --profile=monocov:outfile=monocovCoverage.cov,+Unity-CI-Template ./testrunner/NUnit.ConsoleRunner.3.8.0/tools/nunit3-console.exe --process=Single ./Assets/Library/ScriptAssemblies/Assembly-CSharp.dll
  #- monocov --export-xml=monocovCoverage monocovCoverage.cov
  #- cat monocovCoverage.cov
  # Try convert Unity xml response into NUnit xml.
  #- ./Scripts/fix-unity-test-results.sh
  #- echo "Done"
  # done
  #- ./Scripts/nunit.sh ./Library/ScriptAssemblies/Assembly-CSharp-Editor.dll
  # OpenCover -- Not tested
  #- OpenCover.Console.exe -register:user -target:"%xunit20%\xunit.console.x86.exe" -targetargs:".\MyUnitTests\bin\Debug\MyUnitTests.dll -noshadow" -filter:"+[UnitTestTargetProject*]* -[MyUnitTests*]*" -output:".\MyProject_coverage.xml"
  #- codecov -f "MyProject_coverage.xml
  # -----------------------
  # NUnit tests
  # -----------------------
  - curl -s https://codecov.io/bash > codecov
  - chmod +x codecov
  # Not supported with NUnit 2
  # ...
  #
  # New Test => Cause build to fail.
  # - ./Scripts/test.sh
  #
  # Test with NUnit 3 : !!! Comeback later on that !!!!
  #- mono ./testrunner/NUnit.ConsoleRunner.3.8.0/tools/nunit3-console.exe ./Library/ScriptAssemblies/Assembly-CSharp-Editor.dll
  #- ./codecov -f $(pwd)/TestResult.xml -t $CODECOV_IO_TOKEN
  # ------------------------
  # End
  # ------------------------

# The deployment portion is used to deploy to specific,
# supported hosts, like S3, Heroku, or GitHub Releases.
#after_success:

# Build Matrix
# Creating a build matrix is a way for us to test a wide variety of environments.

# set notification options
notifications:
  email:
    recipients:
      - boiron.greg@gmail.com
    on_success: change # Default: change. Can be replace by never.
    on_failure: always # Default: always
